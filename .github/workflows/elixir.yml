name: Elixir CI with PostgreSQL

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    name: Build and test
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13 # Specify the PostgreSQL version you want to use
        env:
          POSTGRES_DB: shopping_cart_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - uses: actions/checkout@v3
    - name: Set up Elixir
      uses: erlef/setup-beam@61e01a43a562a89bfc54c7f9a378ff67b03e4a21 # v1.16.0
      with:
        elixir-version: '1.15.4' # [Required] Define the Elixir version
        otp-version: '24.0'      # [Required] Define the Erlang/OTP version
    - name: Restore dependencies cache
      uses: actions/cache@v3
      with:
        path: deps
        key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
        restore-keys: ${{ runner.os }}-mix-
    - name: Install dependencies
      run: mix deps.get
    - name: Configure database connection
      run: |
        # Set the DATABASE_URL environment variable to connect to the PostgreSQL service
        export DATABASE_URL=postgresql://my_test_user:password@localhost:5432/my_test_db
    - name: Set up the database
      run: mix ecto.setup # Assuming you are using Ecto for database migrations and setup
    - name: Run tests
      run: mix test
